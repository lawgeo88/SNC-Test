# A template for creating an env.conf file
# Required fields are uncommented and left blank

# the "full stack" environment, eg zelda
#env=


#platform {
#  confluent {
  # hostname prefix for the nodes in the confluent cluster, e.g. nintendo, stg, prod
#    cluster-id:
#  }
#}

# The remaining sections allow for the specification of definition overrides
# for any definition in the platform manifest file.
#
# This intended to be used for true environmental settings, however it allows
# for any config in any definition to be overridden here. This gives ultimate
# flexibility, however, with great power comes great responsibility.  Abusing
# this mechanism can lead to a situation where managing the full set of override
# files becomes unwieldy.  For example, imagine trying to deal with 75 different
# variations of env.conf in the dp-blueprint-env
#
# Notice, the structure of this section follows manifest.conf, with the one difference
# that we don't have the indirection of specifying a definition location


#
# sourced-event-domain definition overrides
#
#sourced-event-domains {
#  domain-name {
#    event-type {
#    }
#  }
#}


#
# execution-enivoronment definitions overrides
#
#execution-environments {
#  execution-environment-id {
#    config {
#    }
#  }
#}


#
# app definition overrides
#
#apps {
#  app-id {
#    command {}
#    app-config {}
#  }
#}


#
# source-app definition overrides
#
#source-apps {
#  app-id {}
#}


#
# internal-app definition overrides
#
#internal-apps {
#  app-id {}
#}
